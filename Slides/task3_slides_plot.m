function task3_slides_plot(IRF, indexmatrix, collector, response, shock, VAR_config, FLAGcumsum, pic_config)
  
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % task3_slides_plot
    %
    % Inputs
    % IRF
    % indexmatrix
    % collector - draw info from numerical IRF
    % reponse - variable number of response
    % shock - variable number of shock
    % VAR_config - object generated by SVAR_config.m
    % FLAGcumsum - logical flag for cumulative sum
    % pic_config - object generated by pic_config.m
    % point_ID - indictator of whether to include median response
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    debug = 0;
    if debug == 1
        VAR_config = t3_VAR_config;
        pic_config = picture_config;
        IRF = t3_IRF;
        indexmatrix = t3_indexmatrix;
        collector = t3_collector;
        FLAGcumsum = false;
        response = 1;
        shock = 3;
    end
 
    % Unspool
    drawMatrix = VAR_config.drawMatrix;
    nhorizon = VAR_config.nhorizon;
    names = VAR_config.names;
 
    fig_fontsize = pic_config.fontsize;
    fig_width = pic_config.width;
    fig_height = pic_config.height;
    pic_dir = pic_config.directory;
 
    colormat = {'blue', 'blue'}; % Shotguns
    ogcolor = {'green', 'green'}; % Orginal IRF color
 
    if FLAGcumsum == 0
        plot_IRF = squeeze(IRF(response, shock, 1:nhorizon, :));
     
    elseif FLAGcumsum == 1
        plot_IRF = cumsum(squeeze(IRF(response, shock, 1:nhorizon, :)));
     
    end
 
    for ii = size(collector, 1): - 1:1 % reverse order for better pictures
        figure('Name', ['HPD' num2str(ii)])
     
        if FLAGcumsum == 0
            plot_og_IRF = squeeze(IRF(response, shock, 1:nhorizon, indexmatrix(1, ii)));
        elseif FLAGcumsum == 1
            plot_og_IRF = cumsum(squeeze(IRF(response, shock, 1:nhorizon, indexmatrix(1, ii))));
        end
     
        % Shotgun plots
        plot(0:nhorizon - 1, plot_IRF(:, indexmatrix(1:collector(ii, 1), ii)), ...
        'LineWidth', 1, 'Color', colormat{ii});
        hold on;
     
        % Legend
        ikcomb_leg(2 * (ii - 1) + 1) = plot(NaN, NaN, 'DisplayName', ['Total = ' num2str(collector(ii, 2)) ...
          '; Accepted = ' num2str(collector(ii, 1))], 'LineWidth', 1, 'Color', colormat{ii});
     
        % Black bands
        plot(0:nhorizon - 1, max(plot_IRF(:, indexmatrix(1:collector(ii, 1), ii)), [], 2), 'k-', ...
          0:nhorizon - 1, min(plot_IRF(:, indexmatrix(1:collector(ii, 1), ii)), [], 2), 'k-', 'linewidth', 2)
     
        title(['Total = ' num2str(collector(ii, 2)) '; Inside = ' num2str(collector(ii, 1))], 'Interpreter', 'latex');
        ylabel(['Response of $' names{response} '$'], 'fontsize', 12, 'Interpreter', 'latex');
        xlabel('Horizon', 'fontsize', 12, 'Interpreter', 'latex');
        ylim([- 8 * 10 ^ (- 3), 2 * 10 ^ (- 3)])
     
        latex_fig(fig_fontsize, fig_width, fig_height);
        tightfig();
        print(gcf, '-depsc2', fullfile(pic_dir, ['slides_t3_' num2str(ii) '.eps']))
     
    end
end

